swagger: '2.0'
info:
  version: 0.0.2
  title: wodson feasibility study
  contact:
    name: totonga@gmail,com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
consumes:
  - application/json
produces:
  - application/json
schemes:
  - http
  - https
tags:
  - name: API_Rest
    description: All methods using Rest 
  - name: API_Http
    description: All methods using Http
  - name: Data
    description: meta and bulk data
  - name: Model
    description: Server model
  - name: Transaction
    description: Handle transactions, Open transactions
  - name: Info
    description: Have a look at server configuration
  - name: Init
    description: Used to initialize server configuration
  - name: Utils
    description: Utilities to do special jobs
paths:
  /con/{conI}/data:
    get:
      tags:
        - API_Rest
        - Data
      description: get data from server by using query structure
      operationId: app.data_get
      parameters:
        - name: conI
          in: path
          description: string identify the selected configuration
          required: true
          type: string
        - name: query_struct
          in: body
          required: true
          schema:
            $ref: '#/definitions/QueryStructureV1'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/DataMatrices'
        '404':
          description: not conneted
      produces:
        - application/json
        - text/html
      security:
        - session_auth:
          - access_data
    post:
      tags:
        - API_Rest
        - Data
        - Transaction
      description: create instances
      operationId: app.data_post
      parameters:
        - name: conI
          in: path
          description: string identify the selected configuration
          required: true
          type: string
        - name: data_matrix
          in: body
          required: true
          schema:
            $ref: '#/definitions/DataMatrix'
      responses:
        '200':
          description: Successful updated
          schema:
            $ref: '#/definitions/DataMatrix'
        '405':
          description: Invalid input
      security:
        - session_auth:
          - modify_data
    put:
      tags:
        - API_Rest
        - Data
        - Transaction
      description: update instances
      operationId: app.data_put
      parameters:
        - name: conI
          in: path
          description: string identify the selected configuration
          required: true
          type: string
        - name: data_matrix
          in: body
          required: true
          schema:
            $ref: '#/definitions/DataMatrix'
      responses:
        '200':
          description: Successful updated
        '405':
          description: Invalid input
      security:
        - session_auth:
          - modify_data
    delete:
      tags:
        - API_Rest
        - Data
        - Transaction
      description: update instances
      operationId: app.data_delete
      parameters:
        - name: conI
          in: path
          description: string identify the selected configuration
          required: true
          type: string
        - name: data_matrix
          in: body
          required: true
          schema:
            $ref: '#/definitions/DataMatrix'
      responses:
        '200':
          description: Successful deleted
        '405':
          description: Invalid input
      security:
        - session_auth:
          - modify_data
  /con/{conI}/data/iteratorguid/{iteratorGuid}:
    get:
      tags:
        - API_Http
        - API_Rest
        - Data
      description: If a method was not able to return the complete result in a single DataMatrix it will add an iteratorguid that can be used to fetch the next chunk 
      operationId: app.data_iteratorguid_get
      parameters:
        - name: conI
          in: path
          description: string identify the selected configuration
          required: true
          type: string
        - name: iteratorGuid
          in: path
          description: guid to retrieve additional results
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/DataMatrices'
        '404':
          description: not connected
      produces:
        - application/json
        - text/html
      security:
        - session_auth:
          - access_data
  /con/{conI}/data/access:
    post:
      tags:
        - API_Http
        - Data
      description: Get data from server by using query structure
      operationId: app.data_access_post
      parameters:
        - name: conI
          in: path
          description: string identify the selected configuration
          required: true
          type: string
        - name: query_struct
          in: body
          required: true
          schema:
            $ref: '#/definitions/QueryStructureV1'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/DataMatrices'
        '404':
          description: not connected
      produces:
        - application/json
        - text/html
      security:
        - session_auth:
          - access_data
  /con/{conI}/data/modify:
    post:
      tags:
        - API_Http
        - Data
        - Transaction
      description: create instances
      operationId: app.data_modify_post
      parameters:
        - name: conI
          in: path
          description: string identify the selected configuration
          required: true
          type: string
        - name: data_matrix
          in: body
          required: true
          schema:
            $ref: '#/definitions/DataMatrix'
      responses:
        '200':
          description: Successful updated
          schema:
            $ref: '#/definitions/DataMatrix'
        '405':
          description: Invalid input
      security:
        - session_auth:
          - modify_data
    put:
      tags:
        - API_Http
        - Data
        - Transaction
      description: update instances
      operationId: app.data_modify_put
      parameters:
        - name: conI
          in: path
          description: string identify the selected configuration
          required: true
          type: string
        - name: data_matrix
          in: body
          required: true
          schema:
            $ref: '#/definitions/DataMatrix'
      responses:
        '200':
          description: Successful updated
        '405':
          description: Invalid input
      security:
        - session_auth:
            - modify_data
    delete:
      tags:
        - API_Http
        - Data
        - Transaction
      description: update instances
      operationId: app.data_modify_delete
      parameters:
        - name: conI
          in: path
          description: string identify the selected configuration
          required: true
          type: string
        - name: data_matrix
          in: body
          required: true
          schema:
            $ref: '#/definitions/DataMatrix'
      responses:
        '200':
          description: Successful updated
        '405':
          description: Invalid input
      security:
        - session_auth:
          - modify_data  
  /con/{conI}/transaction:
    post:
      tags:
        - API_Http
        - API_Rest
        - Transaction
      description: start a transaction to be used a command that uses transaction
      operationId: app.transaction_post
      parameters:
        - name: conI
          in: path
          description: string identify the selected configuration
          required: true
          type: string
      responses:
        '200':
          description: Successful started transaction
        '405':
          description: Invalid input. Transaction was not opened
      security:
        - session_auth:
          - modify_data
          - modify_model
    put:
      tags:
        - API_Http
        - API_Rest
        - Transaction
      description: commit transaction opened by a command that uses transaction
      operationId: app.transaction_put
      parameters:
        - name: conI
          in: path
          description: string identify the selected configuration
          required: true
          type: string
      responses:
        '200':
          description: Successful committed transaction
        '405':
          description: Invalid input. Transaction was not opened
      security:
        - session_auth:
          - modify_data
          - modify_model
    delete:
      tags:
        - API_Http
        - API_Rest
        - Transaction
      description: rollback transaction opend by a command that uses transaction
      operationId: app.transaction_delete
      parameters:
        - name: conI
          in: path
          description: string identify the selected configuration
          required: true
          type: string
      responses:
        '200':
          description: Successful rolled back transaction
        '405':
          description: Invalid input. Transaction was not opened
      security:
        - session_auth:
          - modify_model
          - modify_data
  /con/{conI}/model:
    get:
      tags:
        - API_Http
        - API_Rest
        - Info
        - Model
      description: get model information
      operationId: app.model_get
      parameters:
        - name: conI
          in: path
          description: string identify the selected configuration
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ServerModel'
        '404':
          description: not connected
      security:
        - session_auth:
          - access_data
    put:
      tags:
        - API_Http
        - API_Rest
        - Model
        - Transaction
      description: update or extend the model
      operationId: app.model_put
      parameters:
        - name: conI
          in: path
          description: string identify the selected configuration
          required: true
          type: string
        - name: model
          in: body
          required: true
          schema:
            $ref: '#/definitions/ServerModel'
      responses:
        '200':
          description: Successful updated
        '405':
          description: Invalid input
      security:
        - session_auth:
          - modify_model
    delete:
      tags:
        - API_Http
        - API_Rest
        - Model
        - Transaction
      description: delete elements in the model
      operationId: app.model_delete
      parameters:
        - name: conI
          in: path
          description: string identify the selected configuration
          required: true
          type: string
        - name: model
          in: body
          required: true
          schema:
            $ref: '#/definitions/ServerModel'
      responses:
        '200':
          description: Successful updated
        '405':
          description: Invalid input
      security:
        - session_auth:
          - modify_model
  /con/{conI}/context:
    get:
      tags:
        - API_Http
        - API_Rest
        - Info
      description: get information about current context
      operationId: app.context_get
      parameters:
        - name: conI
          in: path
          description: string identify the selected configuration
          required: true
          type: string
        - in: query
          name: pattern
          description: Pattern of the context parameters to retrieve. Might contain asterics
          required: false
          type: string
          default: '*'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/NameValuePairs'
        '404':
          description: not connected
      security:
        - session_auth:
          - access_data
    put:
      tags:
        - API_Http
        - API_Rest
      operationId: app.context_put
      parameters:
        - name: conI
          in: path
          description: string identify the selected configuration
          required: true
          type: string
        - name: parameters
          in: body
          required: true
          schema:
            $ref: '#/definitions/NameValuePairs'
      responses:
        '200':
          description: Successful updated
        '405':
          description: Invalid input
      security:
        - session_auth:
          - modify_data
  /con/{conI}/utils/asampath/create:
    get:
      tags:
        - API_Rest
        - Utils
      description: Create an ASAM path for a given instance
      operationId: app.utils_asampath_create_get
      parameters:
        - name: conI
          in: path
          description: string identify the selected configuration
          required: true
          type: string
        - name: params
          in: body
          required: true
          schema:
            $ref: '#/definitions/Instance'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/AsamPath'
        '404':
          description: not conneted
      security:
        - session_auth:
          - access_data
    post:
      tags:
        - API_Http
        - Utils
      description: Create an ASAM path for a given instance
      operationId: app.utils_asampath_create_post
      parameters:
        - name: conI
          in: path
          description: string identify the selected configuration
          required: true
          type: string
        - name: params
          in: body
          required: true
          schema:
            $ref: '#/definitions/Instance'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/AsamPath'
        '404':
          description: not conneted
      security:
        - session_auth:
          - access_data
  /con/{conI}/utils/asampath/resolve:
    get:
      tags:
        - API_Rest
        - Utils
      description: Get instance for given ASAM path
      operationId: app.utils_asampath_resolve_post
      parameters:
        - name: conI
          in: path
          description: string identify the selected configuration
          required: true
          type: string
        - name: params
          in: body
          required: true
          schema:
            $ref: '#/definitions/AsamPath'
      responses:
        '200':
          description: Successful updated
          schema:
            $ref: '#/definitions/Instance'
        '405':
          description: Invalid input
      security:
        - session_auth:
          - access_data
    post:
      tags:
        - API_Http
        - Utils
      description: Get instance for given ASAM path
      operationId: app.utils_asampath_resolve_get
      parameters:
        - name: conI
          in: path
          description: string identify the selected configuration
          required: true
          type: string
        - name: params
          in: body
          required: true
          schema:
            $ref: '#/definitions/AsamPath'
      responses:
        '200':
          description: Successful updated
          schema:
            $ref: '#/definitions/Instance'
        '405':
          description: Invalid input
      security:
        - session_auth:
          - access_data
  /con/{conI}:
    get:
      tags:
        - API_Http
        - API_Rest
        - Info
      description: get parameter of con
      operationId: app.con_get
      parameters:
        - name: conI
          in: path
          description: get paameters of current con
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/NameValuePairs'
        '404':
          description: not connected
      security:
        - session_auth:
          - access_data
    post:
      tags:
        - API_Http
        - API_Rest
        - Init
      operationId: app.con_post
      parameters:
        - name: conI
          in: path
          description: create new Con with default parameters
          required: true
          type: string
        - name: parameters
          in: body
          required: true
          schema:
            $ref: '#/definitions/NameValuePairs'
      responses:
        '200':
          description: Successful updated
        '405':
          description: Invalid input
      security:
        - session_auth:
          - modify_data
    put:
      tags:
        - API_Http
        - API_Rest
        - Init
      operationId: app.con_put
      parameters:
        - name: conI
          in: path
          description: set parameters of con
          required: true
          type: string
        - name: parameters
          in: body
          required: true
          schema:
            $ref: '#/definitions/NameValuePairs'
      responses:
        '200':
          description: Successful updated
        '405':
          description: Invalid input
      security:
        - session_auth:
          - modify_data
    delete:
      tags:
        - API_Http
        - API_Rest
        - Init
      operationId: app.con_delete
      parameters:
        - name: conI
          in: path
          description: set parameters of con
          required: true
          type: string
      responses:
        '200':
          description: Successful updated
        '405':
          description: Invalid input
      security:
        - session_auth:
          - modify_data
securityDefinitions:
  session_auth:
    type: oauth2
    authorizationUrl: 'http://swagger.asam.net/api/oauth/dialog'
    flow: implicit
    scopes:
      access_data: read data from server
      modify_data: write/delete data to server
      modify_model: capable to change server model
definitions:
  Instance:
    type: object
    properties:
      entity:
        type: string
        description: name of the application element or base element or string version of the objecttype/aid. In case multiple elements are derived from this base element the first one is picked
        example: MeaQuantity
      id:
        type: integer
        format: int64
        example: 1
  AsamPath:
    type: object
    properties:
      path:
        type: string
        description: string representing an AsamPath 
        example: /[test]myTest/[measurement]myMeasurement
  QueryStructureV1:
    type: object
    properties:
      entity:
        type: string
        description: name of the application element or base element or string version of the objecttype/aid. In case multiple elements are derived from this base element the first one is picked
        example: MeaQuantity
      conditions:
        type: array
        items:
          type: string
          description: query condition or brackets and conjunction operators.
          example: 'measurement.name=PK_*'
      attributes:
        type: array
        items:
          type: string
          description: attribute path. asterics or empty array can be used to get all attributes
          example: measurement.name
      orderBy:
        type: array
        items:
          type: string
          description: 'attribute path that may contain warping ASCENDING, DESCENDING'
          example: ASCENDING(name)
      groupBy:
        type: array
        items:
          type: string
          description: attribute path
          example: name
      maxCount:
        type: integer
        format: int64
        example: 1000
      skipCount:
        type: integer
        format: int64
        example: 0
      vectorSkipCount:
        type: integer
        format: int64
        example: 0
      vectorMaxCount:
        type: integer
        format: int64
        example: 10000
      valuesType:
        type: string
        enum:
          - STORAGE
          - CALCULATED
  NameValuePairs:
    type: array
    items:
      title: Parameter
      type: object
      properties:
        name:
          type: string
          description: name of the name-value pair
          example: USER
        value:
          type: string
          description: value of the name-value pair
          example: system
  ServerModel:
    type: object
    properties:
      enumerations:
        type: array
        items:
          title: Enumeration
          type: object
          properties:
            name:
              type: string
            entries:
              type: array
              items:
                title: EnumItem
                type: object
                properties:
                  name:
                    type: string
                  index:
                    type: integer
                    format: int32
      entities:
        type: array
        items:
          title: Entity
          type: object
          properties:
            name:
              type: string
            baseName:
              type: string
            objecttype:
              type: integer
              format: int64
            attributes:
              type: array
              items:
                title: Attribute
                type: object
                properties:
                  name:
                    type: string
                  baseName:
                    type: string
                  dataType:
                    type: string
                    enum:
                      - DT_UNKNOWN
                      - DT_STRING
                      - DT_SHORT
                      - DT_FLOAT
                      - DT_BOOLEAN
                      - DT_BYTE
                      - DT_LONG
                      - DT_DOUBLE
                      - DT_LONGLONG
                      - DT_ID
                      - DT_DATE
                      - DT_BYTESTR
                      - DT_BLOB
                      - DT_COMPLEX
                      - DT_DCOMPLEX
                      - DS_STRING
                      - DS_SHORT
                      - DS_FLOAT
                      - DS_BOOLEAN
                      - DS_BYTE
                      - DS_LONG
                      - DS_DOUBLE
                      - DS_LONGLONG
                      - DS_COMPLEX
                      - DS_DCOMPLEX
                      - DS_ID
                      - DS_DATE
                      - DS_BYTESTR
                      - DT_EXTERNALREFERENCE
                      - DS_EXTERNALREFERENCE
                      - DT_ENUM
                      - DS_ENUM
                  length:
                    type: integer
                    format: int64
                  obligatory:
                    type: boolean
                  unique:
                    type: boolean
                  unitId:
                    type: integer
                    format: int64
                  enumeration:
                    type: string
            relations:
              type: array
              items:
                title: Relation
                type: object
                properties:
                  name:
                    type: string
                  baseName:
                    type: string
                  inverseName:
                    type: string
                  inverseBaseName:
                    type: string
                  obligatory:
                    type: boolean
                  type:
                    type: string
                    enum:
                      - 1-n
                      - n-1
                      - n-m
                  kind:
                    type: string
                    enum:
                      - FATHER_CHILD
                      - INFO
                  relEntityName:
                    type: string
                  relEntityBaseName:
                    type: string
  DataMatrix:
    type: object
    properties:
      name:
        type: string
        example: MyInfoObj
      baseName:
        type: string
        example: AoAny
      skipCount:
        type: integer
        format: int64
        example: 0
      vectorSkipCount:
        type: integer
        format: int64
        example: 0
      columns:
        type: array
        items:
          title: Column
          type: object
          properties:
            name:
              type: string
            baseName:
              type: string
            aggregate:
              type: string
            values:
              title: ValueUnion
              type: object
              properties:
                dataType:
                  type: string
                  enum:
                    - DT_UNKNOWN
                    - DT_STRING
                    - DT_SHORT
                    - DT_FLOAT
                    - DT_BOOLEAN
                    - DT_BYTE
                    - DT_LONG
                    - DT_DOUBLE
                    - DT_LONGLONG
                    - DT_DATE
                    - DT_BYTESTR
                    - DT_COMPLEX
                    - DT_DCOMPLEX
                    - DS_STRING
                    - DS_SHORT
                    - DS_FLOAT
                    - DS_BOOLEAN
                    - DS_BYTE
                    - DS_LONG
                    - DS_DOUBLE
                    - DS_LONGLONG
                    - DS_COMPLEX
                    - DS_DCOMPLEX
                    - DS_DATE
                    - DS_BYTESTR
                    - DT_EXTERNALREFERENCE
                    - DS_EXTERNALREFERENCE
                    - DT_ENUM
                    - DS_ENUM
                strVal:
                  type: array
                  items:
                    type: string
                numVal:
                  type: array
                  items:
                    type: number
                dateVal:
                  type: array
                  items:
                    type: string
                    format: date-time
                strSeq:
                  type: array
                  items:
                    type: array
                    items:
                      type: string
                numSeq:
                  type: array
                  items:
                    type: array
                    items:
                      type: number
                dateSeq:
                  type: array
                  items:
                    type: array
                    items:
                      type: string
                      format: date-time
                unknownSeq:
                  type: array
                  items:
                    title: TypedValueVector
                    type: object 
                    properties:
                        dataType:
                          type: string
                          enum:
                            - DS_STRING
                            - DS_SHORT
                            - DS_FLOAT
                            - DS_BOOLEAN
                            - DS_BYTE
                            - DS_LONG
                            - DS_DOUBLE
                            - DS_LONGLONG
                            - DS_COMPLEX
                            - DS_DCOMPLEX
                            - DS_DATE
                            - DS_BYTESTR
                            - DS_EXTERNALREFERENCE
                        strSeq:
                          type: array
                          items:
                            type: string
                        numSeq:
                          type: array
                          items:
                            type: number
                        dateSeq:
                          type: array
                          items:
                            type: string
                            format: date-time
  DataMatrices:
    type: object
    properties:
      iteratorGuid:
        type: string
        description: optional guid that will show up if the results have been chunked  
      tables:
        type: array
        items:
          $ref: '#/definitions/DataMatrix'
